name: PyPI
on:
  push:
    branches:
      - main
      - auto-release
  pull_request:
    branches: [main]
  release:
    types: [published]

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Build the sdist and the wheel
        run: |
          python -m pip install -U pip
          python -m pip install build
          python -m build
      - name: Check the sdist installs and imports
        run: |
          mkdir -p test-sdist
          cd test-sdist
          python -m venv venv-sdist
          venv-sdist/bin/python -m pip install ../dist/aesara-*.tar.gz
          venv-sdist/bin/python -c "import aesara;print(aesara.__version__)"
          echo "Checking for lazylinker_c.c..."
          test -n "$(find . -name lazylinker_c.c)" && echo "Found lazylinker_c.c"
      - name: Check the wheel installs and imports
        run: |
          mkdir -p test-wheel
          cd test-wheel
          python -m venv venv-wheel
          venv-wheel/bin/python -m pip install ../dist/aesara-*.whl
          venv-wheel/bin/python -c "import aesara;print(aesara.__version__)"
          echo "Checking for lazylinker_c.c..."
          test -n "$(find . -name lazylinker_c.c)" && echo "Found lazylinker_c.c"
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: dist/*

  upload_pypi:
    name: Upload to PyPI on release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_secret }}
